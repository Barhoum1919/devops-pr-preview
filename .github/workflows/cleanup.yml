name: Cleanup PR Previews

on:
  pull_request:
    types: [closed]
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to cleanup'
        required: true
        type: string

jobs:
  cleanup-preview:
    runs-on: self-hosted
    if: github.event.action == 'closed' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get PR number
        id: pr
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "number=${{ inputs.pr_number }}" >> $GITHUB_OUTPUT
          else
            echo "number=${{ github.event.number }}" >> $GITHUB_OUTPUT
          fi

      - name: Remove PR preview
        run: |
          chmod +x ./scripts/remove_preview.sh
          export GITHUB_REPOSITORY="${{ github.repository }}"
          export GITHUB_TOKEN="${{ secrets.GHCR_PAT }}"
          export GITHUB_ACTOR="${{ github.actor }}"
          ./scripts/remove_preview.sh ${{ steps.pr.outputs.number }} 

      - name: Delete container registry tag
        continue-on-error: true
        run: |
              PR_TAG="pr-${{ steps.pr.outputs.number }}"
              GITHUB_OWNER="Barhoum1919"
              PACKAGE_NAME="devops-pr-preview/web"
              ENCODED_PACKAGE_NAME="devops-pr-preview%2Fweb"  
              
              echo "üóëÔ∏è Deleting tag: $PR_TAG from package: $PACKAGE_NAME"
              
              # Use org endpoint (from your URL example)
              API_URL="https://api.github.com/orgs/${GITHUB_OWNER}/packages/container/${ENCODED_PACKAGE_NAME}/versions"
              
              # Get versions
              VERSIONS_JSON=$(curl -s \
                -H "Authorization: Bearer ${{ secrets.GHCR_PAT }}" \
                -H "Accept: application/vnd.github.v3+json" \
                "$API_URL")
              
              # Find and delete the version with our tag
              VERSION_ID=$(echo "$VERSIONS_JSON" | jq -r --arg TAG "$PR_TAG" '.[] | select(.metadata.container.tags[]? == $TAG) | .id' | head -n 1)
              
              if [ -n "$VERSION_ID" ] && [ "$VERSION_ID" != "null" ]; then
                DELETE_URL="https://api.github.com/orgs/${GITHUB_OWNER}/packages/container/${ENCODED_PACKAGE_NAME}/versions/${VERSION_ID}"
                
                RESPONSE_CODE=$(curl -s -o /dev/null -w "%{http_code}" -X DELETE \
                  -H "Authorization: Bearer ${{ secrets.GHCR_PAT }}" \
                  -H "Accept: application/vnd.github.v3+json" \
                  "$DELETE_URL")
                
                if [ "$RESPONSE_CODE" = "204" ]; then
                  echo "‚úÖ Successfully deleted tag: $PR_TAG"
                else
                  echo "‚ö†Ô∏è Failed to delete tag (HTTP $RESPONSE_CODE)"
                fi
              else
                echo "‚ÑπÔ∏è Tag $PR_TAG not found in registry"
              fi
                  

      - name: Comment PR cleanup
        if: github.event.action == 'closed'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.REPO_COMMENTER_PAT }}
          script: |
            const comment = `## üßπ PR Preview Cleaned Up
            
            The preview environment for this PR has been removed:
            - Container stopped and removed
            - Registry tag deleted
            - Resources cleaned up
            
            **Cleanup completed at:** ${new Date().toISOString()}`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ steps.pr.outputs.number }},
              body: comment
            });